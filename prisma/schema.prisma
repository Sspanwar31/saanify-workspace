// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String           @id @default(cuid())
  email            String           @unique
  name             String?
  phone            String?
  password         String
  role             UserRole         @default(CLIENT)
  societyAccountId String?
  isActive         Boolean          @default(true)
  lastLoginAt      DateTime?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  // Relations
  societyAccount SocietyAccount? @relation(fields: [societyAccountId], references: [id])
  createdSocieties SocietyAccount[] @relation("SocietyCreator")

  @@map("users")
}

model SocietyAccount {
  id                String            @id @default(cuid())
  name              String
  adminEmail        String
  adminPhone        String?
  status            SocietyStatus     @default(TRIAL)
  subscriptionPlan  SubscriptionPlan  @default(TRIAL)
  trialEndsAt       DateTime?
  subscriptionEndsAt DateTime?
  address           String?
  city              String?
  state             String?
  postalCode        String?
  totalMembers      Int               @default(0)
  isActive          Boolean           @default(true)
  createdBy         String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  // Relations
  creator User? @relation("SocietyCreator", fields: [createdBy], references: [id])
  users User[]

  @@map("society_accounts")
}

enum UserRole {
  SUPER_ADMIN
  CLIENT
}

enum SocietyStatus {
  TRIAL
  ACTIVE
  EXPIRED
  LOCKED
}

enum SubscriptionPlan {
  TRIAL
  BASIC
  PRO
  ENTERPRISE
}