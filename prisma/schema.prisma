// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String?
  password        String
  role            String    @default("CLIENT") // CLIENT, SUPER_ADMIN
  isActive        Boolean   @default(true)
  lastLoginAt     DateTime?
  societyAccountId String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  societyAccount  SocietyAccount? @relation(fields: [societyAccountId], references: [id])
  createdSocieties Society[]
  
  @@map("users")
}

model SocietyAccount {
  id          String   @id @default(cuid())
  name        String
  description String?
  address     String?
  phone       String?
  email       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  users       User[]
  societies   Society[]
  
  @@map("society_accounts")
}

model Society {
  id              String   @id @default(cuid())
  name            String
  description     String?
  address         String?
  phone           String?
  email           String?
  societyAccountId String
  createdByUserId String
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  societyAccount  SocietyAccount @relation(fields: [societyAccountId], references: [id])
  createdByUser   User           @relation(fields: [createdByUserId], references: [id])
  
  @@map("societies")
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}